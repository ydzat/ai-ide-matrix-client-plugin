// Radix Icons implementation for vanilla JavaScript
// Since we can't use npm packages directly, we'll implement the icons as SVG strings

// Use IIFE to prevent redeclaration errors
(function() {
  // Prevent redeclaration errors by checking if already defined
  if (typeof window !== 'undefined' && window.RadixIcons) {
    console.log('RadixIcons already loaded, skipping redeclaration');
    return;
  }

  class RadixIcons {
  static get HomeIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M7.07926 0.222253C7.31275 -0.007434 7.6873 -0.007434 7.92079 0.222253L14.6708 6.86227C14.907 7.09465 14.907 7.47237 14.6708 7.70476C14.4346 7.93714 14.0569 7.93714 13.8207 7.70476L7.50002 1.49374L1.17929 7.70476C0.943119 7.93714 0.565399 7.93714 0.329228 7.70476C0.0930563 7.47237 0.0930563 7.09465 0.329228 6.86227L7.07926 0.222253ZM1.5 13V7.5H2.5V13C2.5 13.2761 2.72386 13.5 3 13.5H12C12.2761 13.5 12.5 13.2761 12.5 13V7.5H13.5V13C13.5 13.8284 12.8284 14.5 12 14.5H3C2.17157 14.5 1.5 13.8284 1.5 13Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get PersonIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M7.5 0.875C5.49797 0.875 3.875 2.49797 3.875 4.5C3.875 6.15288 4.98124 7.54738 6.49373 7.98351C5.2997 8.12901 4.27557 8.55134 3.50407 9.31167C2.52216 10.2794 2.02502 11.72 2.02502 13.5999C2.02502 13.8623 2.23769 14.0749 2.50002 14.0749C2.76236 14.0749 2.97502 13.8623 2.97502 13.5999C2.97502 11.8799 3.42786 10.7206 4.17091 9.9883C4.91536 9.25463 6.02674 8.87499 7.49995 8.87499C8.97317 8.87499 10.0845 9.25463 10.8290 9.98831C11.5721 10.7206 12.0249 11.8799 12.0249 13.5999C12.0249 13.8623 12.2376 14.0749 12.4999 14.0749C12.7623 14.0749 12.9749 13.8623 12.9749 13.5999C12.9749 11.72 12.4778 10.2794 11.4959 9.31166C10.7244 8.55135 9.70025 8.12903 8.50625 7.98352C10.0187 7.54739 11.125 6.15289 11.125 4.5C11.125 2.49797 9.50203 0.875 7.5 0.875ZM4.825 4.5C4.825 3.02264 6.02264 1.825 7.5 1.825C8.97736 1.825 10.175 3.02264 10.175 4.5C10.175 5.97736 8.97736 7.175 7.5 7.175C6.02264 7.175 4.825 5.97736 4.825 4.5Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get PlusIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M8 2.75C8 2.47386 7.77614 2.25 7.5 2.25C7.22386 2.25 7 2.47386 7 2.75V7H2.75C2.47386 7 2.25 7.22386 2.25 7.5C2.25 7.77614 2.47386 8 2.75 8H7V12.25C7 12.5261 7.22386 12.75 7.5 12.75C7.77614 12.75 8 12.5261 8 12.25V8H12.25C12.5261 8 12.75 7.77614 12.75 7.5C12.75 7.22386 12.5261 7 12.25 7H8V2.75Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get MagnifyingGlassIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get GearIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M7.07095 0.650238C6.67391 0.650238 6.32977 0.925096 6.24198 1.31231L6.0039 2.36247C5.6249 2.47269 5.26335 2.62363 4.92436 2.81013L4.01335 2.23585C3.67748 2.02413 3.23978 2.07312 2.95903 2.35386L2.35294 2.95996C2.0722 3.2407 2.0232 3.6784 2.23493 4.01427L2.80921 4.92528C2.62271 5.26427 2.47177 5.62582 2.36155 6.00482L1.31139 6.24289C0.924179 6.33069 0.649321 6.67482 0.649321 7.07187C0.649321 7.46891 0.924179 7.81305 1.31139 7.90084L2.36155 8.13891C2.47177 8.51791 2.62271 8.87946 2.80921 9.21845L2.23493 10.1295C2.0232 10.4653 2.0722 10.903 2.35294 11.1838L2.95904 11.7899C3.23978 12.0706 3.67748 12.1196 4.01335 11.9079L4.92436 11.3336C5.26335 11.5201 5.6249 11.6711 6.0039 11.7813L6.24198 12.8315C6.32977 13.2187 6.67391 13.4935 7.07095 13.4935C7.46799 13.4935 7.81213 13.2187 7.89992 12.8315L8.13799 11.7813C8.51699 11.6711 8.87854 11.5201 9.21753 11.3336L10.1285 11.9079C10.4644 12.1196 10.9021 12.0706 11.1828 11.7899L11.7889 11.1838C12.0697 10.903 12.1187 10.4653 11.9069 10.1295L11.3327 9.21845C11.5192 8.87946 11.6701 8.51791 11.7803 8.13891L12.8305 7.90084C13.2177 7.81305 13.4925 7.46891 13.4925 7.07187C13.4925 6.67482 13.2177 6.33069 12.8305 6.24289L11.7803 6.00482C11.6701 5.62582 11.5192 5.26427 11.3327 4.92528L11.9069 4.01427C12.1187 3.6784 12.0697 3.2407 11.7889 2.95996L11.1828 2.35386C10.9021 2.07312 10.4644 2.02413 10.1285 2.23585L9.21753 2.81013C8.87854 2.62363 8.51699 2.47269 8.13799 2.36247L7.89992 1.31231C7.81213 0.925096 7.46799 0.650238 7.07095 0.650238ZM7.07095 11.8758C6.68516 11.8758 6.31916 11.7456 6.01893 11.5094C5.7187 11.2732 5.50497 10.9438 5.40973 10.5712L5.17166 9.52098C4.9269 9.43374 4.69266 9.32315 4.4699 9.19063L3.55889 9.76491C3.20302 9.97663 2.76532 9.92764 2.48458 9.6469L1.87849 9.04081C1.59775 8.76007 1.54876 8.32237 1.76048 7.9665L2.33476 7.05549C2.20224 6.83273 2.09165 6.59849 2.00441 6.35373L0.954251 6.11566C0.581616 6.02042 0.252234 5.80669 0.0160271 5.50646C-0.220179 5.20623 -0.350568 4.84023 -0.350568 4.45444C-0.350568 4.06865 -0.220179 3.70265 0.0160271 3.40242C0.252234 3.10219 0.581616 2.88846 0.954251 2.79322L2.00441 2.55515C2.09165 2.31039 2.20224 2.07615 2.33476 1.85339L1.76048 0.942384C1.54876 0.586514 1.59775 0.148811 1.87849 -0.131928L2.48458 -0.738017C2.76532 -1.01876 3.20302 -1.06775 3.55889 -0.856028L4.4699 -0.281749C4.69266 -0.414267 4.9269 -0.524859 5.17166 -0.612098L5.40973 -1.66226C5.50497 -2.03489 5.7187 -2.36427 6.01893 -2.60048C6.31916 -2.83669 6.68516 -2.96708 7.07095 -2.96708C7.45674 -2.96708 7.82274 -2.83669 8.12297 -2.60048C8.4232 -2.36427 8.63693 -2.03489 8.73217 -1.66226L8.97024 -0.612098C9.215 -0.524859 9.44924 -0.414267 9.672 -0.281749L10.583 -0.856028C10.9389 -1.06775 11.3766 -1.01876 11.6573 -0.738017L12.2634 -0.131928C12.5442 0.148811 12.5932 0.586514 12.3814 0.942384L11.8072 1.85339C11.9397 2.07615 12.0503 2.31039 12.1375 2.55515L13.1877 2.79322C13.5603 2.88846 13.8897 3.10219 14.1259 3.40242C14.3621 3.70265 14.4925 4.06865 14.4925 4.45444C14.4925 4.84023 14.3621 5.20623 14.1259 5.50646C13.8897 5.80669 13.5603 6.02042 13.1877 6.11566L12.1375 6.35373C12.0503 6.59849 11.9397 6.83273 11.8072 7.05549L12.3814 7.9665C12.5932 8.32237 12.5442 8.76007 12.2634 9.04081L11.6573 9.6469C11.3766 9.92764 10.9389 9.97663 10.583 9.76491L9.672 9.19063C9.44924 9.32315 9.215 9.43374 8.97024 9.52098L8.73217 10.5712C8.63693 10.9438 8.4232 11.2732 8.12297 11.5094C7.82274 11.7456 7.45674 11.8758 7.07095 11.8758ZM9.07095 7.07187C9.07095 8.17644 8.17552 9.07187 7.07095 9.07187C5.96638 9.07187 5.07095 8.17644 5.07095 7.07187C5.07095 5.9673 5.96638 5.07187 7.07095 5.07187C8.17552 5.07187 9.07095 5.9673 9.07095 7.07187Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get ChatBubbleIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M12.5 3L2.5 3.00002C1.83333 3.00002 1.5 3.36819 1.5 4.00002V8.91668C1.5 9.54851 1.83333 9.91668 2.5 9.91668H4.08333L4.08333 11.9167C4.08333 12.2388 4.33878 12.5 4.66667 12.5C4.81943 12.5 4.96611 12.4335 5.07234 12.3159L6.58333 10.5833H12.5C13.1667 10.5833 13.5 10.2151 13.5 9.58335V4.00002C13.5 3.36819 13.1667 3 12.5 3ZM2.5 2.00002L12.5 2C14.1667 2 15 2.83333 15 4.00002V9.58335C15 10.75 14.1667 11.5833 12.5 11.5833H6.91667L4.91667 13.8333C4.58333 14.2167 4.16667 14.4167 3.66667 14.4167C2.91667 14.4167 2.41667 13.9167 2.41667 13.1667V11.5833H2.5C0.833333 11.5833 0 10.75 0 9.58335V4.00002C0 2.83333 0.833333 2.00002 2.5 2.00002Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get VideoIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M1.5 3C0.671573 3 0 3.67157 0 4.5V10.5C0 11.3284 0.671573 12 1.5 12H9.5C10.3284 12 11 11.3284 11 10.5V9.75L13.1464 11.8964C13.3417 12.0917 13.6583 12.0917 13.8536 11.8964C14.0488 11.7012 14.0488 11.3846 13.8536 11.1893L11.7071 9.04289C11.5119 8.84763 11.1953 8.84763 11 9.04289C10.8047 9.23815 10.8047 9.55473 11 9.75L11 10.5C11 10.7761 10.7761 11 9.5 11H1.5C1.22386 11 1 10.7761 1 10.5V4.5C1 4.22386 1.22386 4 1.5 4H9.5C9.77614 4 10 4.22386 10 4.5V5.25L11 6.25C11.1953 6.44526 11.5119 6.44526 11.7071 6.25C11.9024 6.05474 11.9024 5.73816 11.7071 5.5429L13.8536 3.39645C14.0488 3.20118 14.0488 2.8846 13.8536 2.68934C13.6583 2.49408 13.3417 2.49408 13.1464 2.68934L11 4.83579V4.5C11 3.67157 10.3284 3 9.5 3H1.5Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get InfoCircledIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M7.49991 0.877045C3.84222 0.877045 0.877075 3.84219 0.877075 7.49988C0.877075 11.1575 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 3.84219 11.1576 0.877045 7.49991 0.877045ZM1.82708 7.49988C1.82708 4.36686 4.36689 1.82704 7.49991 1.82704C10.6329 1.82704 13.1727 4.36686 13.1727 7.49988C13.1727 10.6329 10.6329 13.1727 7.49991 13.1727C4.36689 13.1727 1.82708 10.6329 1.82708 7.49988ZM8.24992 4.49999C8.24992 4.9142 7.91413 5.24999 7.49992 5.24999C7.08571 5.24999 6.74992 4.9142 6.74992 4.49999C6.74992 4.08577 7.08571 3.74999 7.49992 3.74999C7.91413 3.74999 8.24992 4.08577 8.24992 4.49999ZM6.00003 5.99999H6.50003H7.50003C7.77617 5.99999 8.00003 6.22385 8.00003 6.49999V9.99999H8.50003H9.00003V11H8.50003H7.50003H6.50003H6.00003V9.99999H6.50003H7.00003V6.99999H6.50003H6.00003V5.99999Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get DotsVerticalIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M8.625 2.5C8.625 3.12132 8.12132 3.625 7.5 3.625C6.87868 3.625 6.375 3.12132 6.375 2.5C6.375 1.87868 6.87868 1.375 7.5 1.375C8.12132 1.375 8.625 1.87868 8.625 2.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM7.5 13.625C8.12132 13.625 8.625 13.1213 8.625 12.5C8.625 11.8787 8.12132 11.375 7.5 11.375C6.87868 11.375 6.375 11.8787 6.375 12.5C6.375 13.1213 6.87868 13.625 7.5 13.625Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get PaperPlaneIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M1.20308 1.04312C1.00481 0.954998 0.772341 1.0048 0.627577 1.16641C0.482813 1.32802 0.458794 1.56455 0.568117 1.75196L3.92115 7.50002L0.568117 13.2481C0.458794 13.4355 0.482813 13.672 0.627577 13.8336C0.772341 13.9952 1.00481 14.045 1.20308 13.9569L14.7031 7.95693C14.8836 7.87668 15 7.69762 15 7.50002C15 7.30243 14.8836 7.12337 14.7031 7.04312L1.20308 1.04312ZM4.84553 7.10002L2.21234 2.586L13.2689 7.50002L2.21234 12.414L4.84552 7.90002H9C9.22091 7.90002 9.4 7.72094 9.4 7.50002C9.4 7.27911 9.22091 7.10002 9 7.10002H4.84553Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get Cross2Icon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get EnterIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M4.5 1C4.77614 1 5 1.22386 5 1.5L5 6L10.5 6C10.7761 6 11 6.22386 11 6.5C11 6.77614 10.7761 7 10.5 7L4 7C3.72386 7 3.5 6.77614 3.5 6.5L3.5 1.5C3.5 1.22386 3.72386 1 4 1L4.5 1ZM6.85355 10.1464C7.04882 10.3417 7.04882 10.6583 6.85355 10.8536C6.65829 11.0488 6.34171 11.0488 6.14645 10.8536L3.14645 7.85355C2.95118 7.65829 2.95118 7.34171 3.14645 7.14645L6.14645 4.14645C6.34171 3.95118 6.65829 3.95118 6.85355 4.14645C7.04882 4.34171 7.04882 4.65829 6.85355 4.85355L4.20711 7.5L6.85355 10.1464Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  static get ExitIcon() {
    return `<svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M3 1C2.44771 1 2 1.44772 2 2V13C2 13.5523 2.44772 14 3 14H10.5C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13H3V2L10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1H3ZM12.6036 4.89645C12.8988 4.60118 13.3737 4.60118 13.6689 4.89645L15.8536 7.08122C16.0488 7.27648 16.0488 7.59306 15.8536 7.78832L13.6689 9.97309C13.3737 10.2684 12.8988 10.2684 12.6036 9.97309C12.3083 9.67782 12.3083 9.20295 12.6036 8.90768L13.8661 7.64523H7.5C7.22386 7.64523 7 7.42137 7 7.14523C7 6.86909 7.22386 6.64523 7.5 6.64523H13.8661L12.6036 5.38278C12.3083 5.08751 12.3083 4.61264 12.6036 4.31737V4.89645Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"/>
    </svg>`;
  }

  // Helper method to create an icon element
  static createIcon(iconName, className = '', size = 15) {
    const iconSvg = this[iconName];
    if (!iconSvg) {
      console.warn(`Icon ${iconName} not found`);
      return document.createElement('div');
    }

    const wrapper = document.createElement('span');
    wrapper.className = `radix-icon ${className}`;
    wrapper.innerHTML = iconSvg;
    
    // Set size if different from default
    if (size !== 15) {
      const svg = wrapper.querySelector('svg');
      if (svg) {
        svg.setAttribute('width', size);
        svg.setAttribute('height', size);
      }
    }
    
    return wrapper;
  }
  }

  // Export for use in other modules
  if (typeof window !== 'undefined') {
    window.RadixIcons = RadixIcons;
  }
})(); // End of IIFE
